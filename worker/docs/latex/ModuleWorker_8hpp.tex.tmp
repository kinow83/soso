\hypertarget{ModuleWorker_8hpp}{}\doxysection{include/\+Module\+Worker.hpp 파일 참조}
\label{ModuleWorker_8hpp}\index{include/ModuleWorker.hpp@{include/ModuleWorker.hpp}}
{\ttfamily \#include $<$chrono$>$}\newline
{\ttfamily \#include $<$condition\+\_\+variable$>$}\newline
{\ttfamily \#include $<$deque$>$}\newline
{\ttfamily \#include $<$functional$>$}\newline
{\ttfamily \#include $<$iostream$>$}\newline
{\ttfamily \#include $<$memory$>$}\newline
{\ttfamily \#include $<$mutex$>$}\newline
{\ttfamily \#include $<$stdint.\+h$>$}\newline
{\ttfamily \#include $<$thread$>$}\newline
{\ttfamily \#include $<$unistd.\+h$>$}\newline
{\ttfamily \#include $<$vector$>$}\newline
Module\+Worker.\+hpp에 대한 include 의존 그래프
% FIG 0
\doxysubsection*{클래스}
\begin{DoxyCompactItemize}
\item 
class \mbox{\hyperlink{classModuleWorker}{Module\+Worker$<$ T $>$}}
\begin{DoxyCompactList}\small\item\em worker(작업자) 스레드가 job(작업)을 처리하는 라이브러리~\newline
하나의 job이 Queue(큐)에 추가되면 여러개의 worker 중 하나의 worker가 선택되어 job을 처리한다. 여기서 어떠한 worker가 선택될지는 모른다. $\ast$ \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classModuleWorker_1_1Worker}{Module\+Worker$<$ T $>$\+::\+Worker}}
\begin{DoxyCompactList}\small\item\em job(작업)를 처리하기 worker(작업)를 관리하기 위한 객체 \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classModuleWorker_1_1Job}{Module\+Worker$<$ T $>$\+::\+Job}}
\begin{DoxyCompactList}\small\item\em 작업 객체 ~\newline
typename T\+: 처리해야 할 Class 타입 \end{DoxyCompactList}\end{DoxyCompactItemize}
